int orangesRotting(vector<vector<int>>& grid) {
       int m=grid.size(),n=grid[0].size();
       int count=-1;
       
       queue<pair<int,int>>pq;
       for(int i=0;i<grid.size();i++)
       {
           for(int j=0;j<grid[i].size();j++)
           {
               if(grid[i][j]==2)pq.push({i,j});
           }
       }
       
       while(!pq.empty())
       {
           count++;
           int size=pq.size();
           while(size--)
           {
               int row=pq.front().first,col=pq.front().second;pq.pop();
               if(row-1>=0 && grid[row-1][col]==1)
               {
                   grid[row-1][col]=2;
                   pq.push({row-1,col});
               }
               if(col-1>=0 && grid[row][col-1]==1)
               {
                   grid[row][col-1]=2;
                   pq.push({row,col-1});
               }
               if(row+1<m && grid[row+1][col]==1)
               {
                   grid[row+1][col]=2;
                   pq.push({row+1,col});
               }
               if(col+1<n && grid[row][col+1]==1)
               {
                   grid[row][col+1]=2;
                   pq.push({row,col+1});
               }
           }
       }
       
       for(int i=0;i<grid.size();i++)
       {
           for(int j=0;j<grid[i].size();j++)
           {
               if(grid[i][j]==1)
               return -1;
           }
       }
       
       
       
       return count;
       
       
       
       
       
       
     
    }
